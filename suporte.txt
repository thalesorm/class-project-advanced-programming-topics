// npm install -g sequelize-cli
// npx sequelize-cli init
// npx sequelize-cli db:migrate
// npx sequelize-cli db:seed:all


{
  "development": {
    "username": "root",
    "password": "senha-mysql",
    "database": "banco-Fat",
    "host": "localhost",
    "dialect": "mysql",
    "seederStorage": "sequelize"
  },
  "test": {
    "username": "root",
    "password": "senha-mysql",
    "database": "database_test",
    "host": "localhost",
    "dialect": "mysql",
    "seederStorage": "sequelize"
  },
  "production": {
    "username": "root",
    "password": "senha-mysql",
    "database": "database_production",
    "host": "localhost",
    "dialect": "mysql",
    "seederStorage": "sequelize"
  }
}



index:
'use strict';

const fs = require('fs');
const path = require('path');
const Sequelize = require('sequelize');
const process = require('process');
const basename = path.basename(__filename);
const env = process.env.NODE_ENV || 'development';
const config = require(__dirname + '/../config1/config.json')[env];
const db = {};

let sequelize;
if (config.use_env_variable) {
  sequelize = new Sequelize(process.env[config.use_env_variable], config);
} else {
  sequelize = new Sequelize(config.database, config.username, config.password, config);
}

fs
  .readdirSync(__dirname)
  .filter(file => {
    return (
      file.indexOf('.') !== 0 &&
      file !== basename &&
      file.slice(-3) === '.js' &&
      file.indexOf('.test.js') === -1
    );
  })
  .forEach(file => {
    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);
    db[model.name] = model;
  });

Object.keys(db).forEach(modelName => {
  if (db[modelName].associate) {
    db[modelName].associate(db);
  }
});

db.sequelize = sequelize;
db.Sequelize = Sequelize;

module.exports = db;



userModel:

const { Model, DataTypes } = require("sequelize");
const db = require("./");

class Usuario extends Model {}

Usuario.init(
  {
    id: {
      allowNull: false,
      autoIncrement: true,
      primaryKey: true,
      type: DataTypes.INTEGER,
    },
    nome: {
      allowNull: false,
      type: DataTypes.STRING,
    },
    email: {
      allowNull: false,
      type: DataTypes.STRING,
    },
    login: {
      allowNull: false,
      type: DataTypes.STRING,
    },
    senha: {
      allowNull: false,
      type: DataTypes.STRING,
    },
  },
  {
    sequelize: db,
    underscored: true,
    timestamps: false,
    modelName: "usuarios",
  }
);

module.exports = {
  Usuario,
};





database.js

require("dotenv").config();

const config = {
  username: process.env.DB_USER || "root",
  password: process.env.DB_PASS || "senha-mysql",
  database: "banco-Fat",
  host: process.env.DB_HOST || "localhost",
  dialect: "mysql",
  dialectOptions: {
    timezone: "Z",
  },
  logging: false,
};

module.exports = config;


crie para mim:

Emorestimo

- id : Int
- data : Calendar
- dataDevolucao : Calendar

Livro
- id : int
- text : String
- nota : int

crie para mim:

Resenha
- id : int
- texto : String
- nota : int

crie para mim:

Editora
- id : int
- name : String

crie para mim:

Autor
- id : int
- nome : String


Models
servuice
controler
rota
app



[
  {
    "id": 1,
    "name": "popo",
    "email": "teste@teste.com",
    "login": "santos",
    "senha": "123456",
    "createdAt": "2023-06-10T13:18:22.000Z",
    "updatedAt": "2023-06-10T13:19:15.000Z"
  },
  {
    "id": 2,
    "name": "thales",
    "email": "teste@teste.com",
    "login": "santos",
    "senha": "123456",
    "createdAt": "2023-06-10T13:18:28.000Z",
    "updatedAt": "2023-06-10T13:18:28.000Z"
  },
  {
    "id": 3,
    "name": "santos",
    "email": "teste@teste.com",
    "login": "santos",
    "senha": "123456",
    "createdAt": "2023-06-10T13:18:34.000Z",
    "updatedAt": "2023-06-10T13:18:34.000Z"
  }
]